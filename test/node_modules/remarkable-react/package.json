{
  "_from": "remarkable-react",
  "_id": "remarkable-react@1.4.1",
  "_inBundle": false,
  "_integrity": "sha512-V5GEcsM1Uw6qghaGJAaH1Od1aV+W8XDq3Bd6w78qfCefncNy3d2zL2UCx2Un4aeXkz2dR5P4wLc0+cPJJ5wvGA==",
  "_location": "/remarkable-react",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "remarkable-react",
    "fetchSpec": "latest",
    "name": "remarkable-react",
    "raw": "remarkable-react",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/remarkable-react/-/remarkable-react-1.4.1.tgz",
  "_shasum": "d9d69930ed526a8296861a6649c94355eee7add8",
  "_shrinkwrap": null,
  "_spec": "remarkable-react",
  "_where": "D:\\projects\\test_mern\\test",
  "author": {
    "name": "Harrison Hogg",
    "url": "https://hogg.io"
  },
  "bugs": {
    "url": "https://github.com/HHogg/remarkable-react/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "react": "^16.3.0"
  },
  "deprecated": false,
  "description": "React markdown adapter for Remarkable",
  "devDependencies": {
    "babel-core": "^6.14.0",
    "babel-eslint": "^8.0.1",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "eslint": "^4.5.0",
    "eslint-config-preshape": "^1.1.0",
    "eslint-plugin-react": "^7.11.1",
    "jest": "^20.0.4",
    "react-test-renderer": "^16.6.3",
    "remarkable": "^1.7.1",
    "rollup": "^0.47.4",
    "rollup-plugin-babel": "^3.0.1",
    "rollup-plugin-commonjs": "^8.1.0",
    "rollup-plugin-node-resolve": "^3.0.0",
    "rollup-plugin-uglify": "^2.0.1",
    "semantic-release": "^15.12.1",
    "travis-deploy-once": "^5.0.9"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/HHogg/remarkable-react#readme",
  "jest": {
    "setupFiles": [
      "./jest-setup.js"
    ]
  },
  "keywords": [
    "markdown",
    "md",
    "react",
    "remarkable"
  ],
  "license": "MIT",
  "main": "lib/remarkable-react.cjs.js",
  "module": "lib/remarkable-react.esm.js",
  "name": "remarkable-react",
  "optionalDependencies": {},
  "peerDependecies": {
    "remarkable": "^1.7.1"
  },
  "readme": "# remarkable-react\n\n[![Build Status](https://travis-ci.org/HHogg/remarkable-react.svg?branch=master)](https://travis-ci.org/HHogg/remarkable-react)\n[![npm version](https://badge.fury.io/js/remarkable-react.svg)](https://badge.fury.io/js/remarkable-react)\n[![Code Climate](https://codeclimate.com/github/HHogg/remarkable-react/badges/gpa.svg)](https://codeclimate.com/github/HHogg/remarkable-react)\n\nA configurable React component renderer for [Remarkable](https://github.com/jonschlinkert/remarkable).\n\n\n## Install\n\n```\n$ yarn add remarkable-react\n```\n\n\n## Usage\n\nSimply instantiate a new RemarkableReactRenderer and replace the standard Remarkable renderer. Like so...\n\n```js\nimport Remarkable from 'remarkable';\nimport RemarkableReactRenderer from 'remarkable-react';\n\nconst md = new Remarkable();\nmd.renderer = new RemarkableReactRenderer();\n\nconsole.log(md.render('# Remarkable rulezz!'));\n\n/*\n * => [\n *  ReactComponent {\n *    type: 'h1',\n *    key: 0,\n *    props: {\n *      children: ['Remarkable ruleszz!']\n *    },\n *  }\n * ]\n */\n}\n```\n\n### Options\n\nSee the configuration options below that can be passed to RemarkableReactRenderer.\n\n```js\nnew RemarkableReactRenderer({\n\n  // Key generator function used to generate the need React keys\n  // Default: return `index`\n  keyGen: (token, index) => 'A Key',\n\n  // This enables you to configure the properties that gets passed to\n  // the React component. The value can either be a Function, String or Boolean.\n  //\n  // > Boolean: `true` will pass it through as it is, `false` will not pass it.\n  // > String: Used to remap the prop and pass through under the new name.\n  // > Function(value, type): Returns an object with new `key` and/or `value`.\n  //\n  remarkableProps: {\n    align: '',    // Default: Function that remaps to style. (For tables)\n    alt: '',      // Default: true (for images)\n    block: '',    // Default: false\n    content: '',  // Default: Function that returns `dangerouslySetInnerHTML` when HTML is enabled.\n    hLevel:'',    // Default: false\n    href:'',      // Default: true (for links)\n    id: '',       // Default: Function that returns href for footnote anchors and id for footnote refs\n    level: '',    // Default: false\n    lines: '',    // Default: false\n    order: '',    // Default: false\n    params:'',    // Default: false\n    src: '',      // Default: true (for images)\n    subId: '',    // Default: false,\n    tight: '',    // Default: false\n    title: '',    // Default: true (for images and links)\n    type:'',      // Default: false\n  },\n\n  // Pass in your own React components!\n  //\n  // Note: At the moment the following are not implemented.\n  // * abbreviations\n  // * definition lists\n  //\n  components: {\n    a: Component,           // Default: <a />\n    blockquote: Component,  // Default: <blockquote />\n    br: Component,          // Default: <br />\n    code: Component,        // Default: <code />\n    del: Component,         // Default: <del />\n    em: Component,          // Default: <em />\n    h1: Component,          // Default: <h1 />\n    h2: Component,          // Default: <h2 />\n    h3: Component,          // Default: <h3 />\n    h4: Component,          // Default: <h4 />\n    h5: Component,          // Default: <h5 />\n    h6: Component,          // Default: <h6 />\n    html: Component,        // Default: <div />\n    img: Component,         // Default: <img />\n    ins: Component,         // Default: <ins />\n    li: Component,          // Default: <li />\n    mark: Component,        // Default: <mark />\n    ol: Component,          // Default: <ol />\n    p: Component,           // Default: <p />\n    pre: Component,         // Default: <pre />\n    strong: Component,      // Default: <strong />\n    sub: Component,         // Default: <sub />\n    sup: Component,         // Default: <sup />\n    table: Component,       // Default: <table />\n    tbody: Component,       // Default: <tbody />\n    td: Component,          // Default: <td />\n    th: Component,          // Default: <th />\n    thead: Component,       // Default: <thead />\n    tr: Component,          // Default: <tr />\n    ul: Component,          // Default: <ul />\n\n    /**\n     * Custom components that are defined in the tokens\n     * section below.\n     */\n    custom_component: Component\n  },\n\n  // This enables you to configure the mapping of remarkable tokens to component (above).\n  // The value can either be a Function, String or Array.\n  //\n  // > Array[String]: Will nest components from parent down.\n  // > String: Used to map directly to a single component.\n  // > Function(tokenObject, remarkableOptions): Return a string or Component.\n  //\n  tokens: {\n\n    // Use this to also handle your custom remarkable tokens!\n    custom_token: 'custom_component',\n  },\n\n  // This enables you to quickly configure how children are rendered for tokens.\n  // By default the `content` of a token is mapped to `children`.\n  children: {\n    footnote_anchor: () => `â†©`,\n  },\n});\n```\n\n### Syntax Highlighting\n\nI've tried to keep this renderer unopinionated and impartial to any one highlighting library, but it is still possible to get this working with a set up like...\n\n\n```jsx\nimport SyntaxHighlighter from 'library';\n\n\nconst renderer = new RemarkableReactRenderer({\n  components: {\n    pre: ({ content, params: language }) => (\n      <div dangerouslySetInnerHTML={ { __html:\n        SyntaxHighlighter.highlight(content, language),\n      } } />\n    ),\n  }\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/HHogg/remarkable-react.git"
  },
  "scripts": {
    "build": "BABEL_ENV=production rollup -c",
    "lint": "eslint --config .eslintrc ./src ./test",
    "semantic-release": "semantic-release",
    "test": "jest ./test",
    "travis-deploy-once": "travis-deploy-once"
  },
  "version": "1.4.1"
}
